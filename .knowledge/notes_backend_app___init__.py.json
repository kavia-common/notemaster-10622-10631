{"is_source_file": true, "format": "Python", "description": "This is the __init__.py file for the Flask application backend. It initializes the app, configures extensions such as CORS, SQLAlchemy, Marshmallow, JWT, and the API with smorest. It also loads environment variables and registers blueprints for different routes.", "external_files": ["flask", "flask_cors", "flask_smorest", "flask_sqlalchemy", "flask_marshmallow", "flask_jwt_extended", "dotenv", ".models", ".routes.health", ".routes.auth", ".routes.notes"], "external_methods": ["load_dotenv", "CORS", "db.init_app", "api.register_blueprint"], "published": ["app"], "classes": [{"name": "Flask", "description": "The Flask application instance, configured for the API."}, {"name": "Api", "description": "smorest API object used for API documentation and blueprint management."}, {"name": "SQLAlchemy", "description": "Database object initialized with Flask app, managing database connections."}, {"name": "Marshmallow", "description": "Object serialization/deserialization library for data validation and formatting."}, {"name": "JWTManager", "description": "JWT manager extension for handling authentication tokens."}], "methods": [{"name": "__init__", "description": "The top-level script execution for app setup, including configuration, extension initialization, and blueprint registration."}], "calls": ["load_dotenv()", "CORS(app, resources={r\"/*\": {\"origins\": \"*\"}})", "db.init_app(app)", "api.register_blueprint(health_blp)", "api.register_blueprint(auth_blp)", "api.register_blueprint(notes_blp)"], "search-terms": ["Flask app initialization", "API configuration", "BluePrint registration", "JWTManager setup", "Environment variables"], "state": 2, "file_id": 4, "knowledge_revision": 23, "git_revision": "ab707685d02567f1a547b6dda7bd931dd334b240", "revision_history": [{"12": "993c79d78edf64c36fbd648395ab851ab6e118fd"}, {"23": "ab707685d02567f1a547b6dda7bd931dd334b240"}], "ctags": [{"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/notemaster-10622-10631/notes_backend/app/__init__.py", "pattern": "/^api = Api(app)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/notemaster-10622-10631/notes_backend/app/__init__.py", "pattern": "/^app = Flask(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "auth_blp", "path": "/home/kavia/workspace/code-generation/notemaster-10622-10631/notes_backend/app/__init__.py", "pattern": "/^from .routes.auth import blp as auth_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "health_blp", "path": "/home/kavia/workspace/code-generation/notemaster-10622-10631/notes_backend/app/__init__.py", "pattern": "/^from .routes.health import blp as health_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "jwt", "path": "/home/kavia/workspace/code-generation/notemaster-10622-10631/notes_backend/app/__init__.py", "pattern": "/^jwt = JWTManager(app)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ma", "path": "/home/kavia/workspace/code-generation/notemaster-10622-10631/notes_backend/app/__init__.py", "pattern": "/^ma = Marshmallow(app)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "notes_blp", "path": "/home/kavia/workspace/code-generation/notemaster-10622-10631/notes_backend/app/__init__.py", "pattern": "/^from .routes.notes import blp as notes_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}], "hash": "b82b83e3c9cee7c566ae405c93aad597", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/app/__init__.py", "fields": [{"name": "api = Api(app)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = Flask(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "jwt = JWTManager(app)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ma = Marshmallow(app)", "scope": "", "scopeKind": "", "description": "unavailable"}]}